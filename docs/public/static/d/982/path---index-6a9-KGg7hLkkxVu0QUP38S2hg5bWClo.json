{"data":{"site":{"siteMetadata":{"jsdocs":[{"path":"array/toObj","sig":"[v] -> object<k, v>","examples":[],"description":"Transform an array into an object, where keys are indices, and values are elements.","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/array/index.js#L18"},{"path":"array/toObjBy","sig":"(a -> b) -> [a] -> object<b, a>","examples":[],"description":"Given a function that generates a key, turns a list of objects into an object indexing the objects by the given key","deprecated":true,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/array/index.js#L25"},{"path":"array/sample","sig":"[t] -> t","examples":[],"description":"Select a random array item","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/array/index.js#L36"},{"path":"array/shuffle","sig":"[t] -> [t]","examples":["shuffle([1, 2, 3, 4, 5]) // [4, 1, 2, 5, 3]"],"description":"Immutably randomize array element order\nFisher-Yates shuffle","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/array/index.js#L48"},{"path":"async/all","sig":"[promise<t>] -> [t]","examples":[],"description":"parallel resolve promises","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L17"},{"path":"async/race","sig":"[promise<t>] -> t","examples":[],"description":"race","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L24"},{"path":"async/delay","sig":"number -> undefined","examples":[],"description":"delay","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L31"},{"path":"async/toAsync","sig":"(a -> b) -> (a -> promise<b>)","examples":[],"description":"wraps a function to always return a promise","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L38"},{"path":"async/deferred","sig":"* -> object","examples":[],"description":"creates an externally controlled promise","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L70"},{"path":"async/reduce","sig":"((a, t) -> a) -> a -> [t] -> a","examples":[],"description":"reduce","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L87"},{"path":"async/pipe","sig":"(...f) -> f","examples":[],"description":"serial + async R.pipe. works with sync or async functions","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L97"},{"path":"async/pipeC","sig":"(...f) -> f","examples":[],"description":"curried async pipe","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L106"},{"path":"async/mapPairsLimit","sig":"number -> (v -> w) -> object<k,v> -> object<k,w>","examples":[],"description":"map pairs limit","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L138"},{"path":"async/forEachLimit","sig":"number -> (a -> b) -> [a] -> [b]","examples":[],"description":"for each limit","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L147"},{"path":"async/everyLimit","sig":"number -> (a -> boolean) -> [a] -> boolean","examples":[],"description":"every limit","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L157"},{"path":"async/someLimit","sig":"number -> (a -> boolean) -> [a] -> boolean","examples":[],"description":"some limit","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L171"},{"path":"async/findLimit","sig":"number -> (a -> boolean) -> [a]","examples":[],"description":"find limit","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L185"},{"path":"async/flatMapLimit","sig":"number -> (a -> [a]) -> [a] -> [a]","examples":[],"description":"flat map limit","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L201"},{"path":"async/filterLimit","sig":"number -> (a -> boolean) -> [a] -> [a]","examples":[],"description":"filter limit","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L208"},{"path":"async/allSettledLimit","sig":"number -> [promise] -> [object]","examples":[],"description":"all settled limit","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L217"},{"path":"async/map","sig":"Functor f => (a -> b) -> f a -> f b","examples":[],"description":"map limit","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L231"},{"path":"async/mapSeries","sig":"Functor f => (a -> b) -> f a -> f b","examples":[],"description":"map series","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L238"},{"path":"async/mapPairs","sig":"(v -> w) -> object<k,v> -> object<k,w>","examples":[],"description":"map pairs","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L245"},{"path":"async/mapPairsSeries","sig":"(v -> w) -> object<k,v> -> object<k,w>","examples":[],"description":"map pairs series","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L252"},{"path":"async/forEach","sig":"(a -> b) -> [a] -> [a]","examples":[],"description":"parallel for each","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L259"},{"path":"async/forEachSeries","sig":"(a -> b) -> [a] -> [a]","examples":[],"description":"for each series","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L266"},{"path":"async/every","sig":"(a -> boolean) -> [a] -> boolean","examples":[],"description":"parallel every","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L273"},{"path":"async/everySeries","sig":"(a -> boolean) -> [a] -> boolean","examples":[],"description":"every series","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L280"},{"path":"async/some","sig":"(a -> boolean) -> [a] -> boolean","examples":[],"description":"parallel some","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L287"},{"path":"async/someSeries","sig":"(a -> boolean) -> [a] -> boolean","examples":[],"description":"some series","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L294"},{"path":"async/find","sig":"(t -> boolean) -> [t] -> t","examples":[],"description":"parallel find","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L301"},{"path":"async/findSeries","sig":"(t -> boolean) -> [t] -> t","examples":[],"description":"find series","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L308"},{"path":"async/flatMap","sig":"(a -> [a]) -> [a] -> [a]","examples":[],"description":"parallel flatMap (chain)","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L315"},{"path":"async/flatMapSeries","sig":"(a -> [a]) -> [a] -> [a]","examples":[],"description":"flatMap series (chain)","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L322"},{"path":"async/filter","sig":"(a -> boolean) -> [a] -> [a]","examples":[],"description":"parallel filter","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L329"},{"path":"async/filterSeries","sig":"(a -> boolean) -> [a] -> [a]","examples":[],"description":"filter series","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L336"},{"path":"is/isDate","sig":"* -> boolean","examples":[],"description":"Test for date type","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/is/index.js#L45"},{"path":"iterable/async/map","sig":"(A -> Promise<B>) -> Iterable<A> -> AsyncIterator<B>","examples":[],"description":"map","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/iterable/async.js#L29"},{"path":"string/template","sig":"string -> object -> string","examples":[],"description":"reasonably similar to js template literals","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/string/index.js#L42"}]}}},"pageContext":{}}