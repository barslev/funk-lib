{"data":{"site":{"siteMetadata":{"jsdocs":[{"path":"array/toObj","sig":"[v] -> object<k, v>","examples":[],"description":"Transform an array into an object, where keys are indices, and values are elements.","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/array/index.js#L18"},{"path":"array/toObjBy","sig":"(a -> b) -> [a] -> object<b, a>","examples":[],"description":"Given a function that generates a key, turns a list of objects into an object indexing the objects by the given key","deprecated":true,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/array/index.js#L25"},{"path":"array/sample","sig":"[t] -> t","examples":[],"description":"Select a random array item","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/array/index.js#L36"},{"path":"array/shuffle","sig":"[t] -> [t]","examples":["shuffle([1, 2, 3, 4, 5]) // [4, 1, 2, 5, 3]"],"description":"Immutably randomize array element order\nFisher-Yates shuffle","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/array/index.js#L48"},{"path":"async/reduce","sig":"((a, t) -> a) -> a -> [t] -> a","examples":[],"description":"reduce","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L69"},{"path":"async/pipe","sig":"(...f) -> f","examples":[],"description":"serial + async R.pipe. works with sync or async functions","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L79"},{"path":"async/pipeC","sig":"(...f) -> f","examples":[],"description":"curried async pipe","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L88"},{"path":"async/mapPairsLimit","sig":"number -> (v -> w) -> object<k,v> -> object<k,w>","examples":[],"description":"map pairs limit","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L120"},{"path":"async/forEachLimit","sig":"number -> (a -> b) -> [a] -> [b]","examples":[],"description":"for each limit","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L129"},{"path":"async/everyLimit","sig":"number -> (a -> boolean) -> [a] -> boolean","examples":[],"description":"every limit","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L139"},{"path":"async/someLimit","sig":"number -> (a -> boolean) -> [a] -> boolean","examples":[],"description":"some limit","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L153"},{"path":"async/findLimit","sig":"number -> (a -> boolean) -> [a]","examples":[],"description":"find limit","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L167"},{"path":"async/flatMapLimit","sig":"number -> (a -> [a]) -> [a] -> [a]","examples":[],"description":"flat map limit","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L183"},{"path":"async/filterLimit","sig":"number -> (a -> boolean) -> [a] -> [a]","examples":[],"description":"filter limit","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L190"},{"path":"is/isDate","sig":"* -> boolean","examples":[],"description":"Test for date type","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/is/index.js#L45"},{"path":"iterable/async/map","sig":"(A -> Promise<B>) -> Iterable<A> -> AsyncIterator<B>","examples":[],"description":"map","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/iterable/async.js#L29"},{"path":"string/template","sig":"string -> object -> string","examples":[],"description":"reasonably similar to js template literals","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/string/index.js#L42"}]}}},"pageContext":{}}