{"data":{"site":{"siteMetadata":{"jsdocs":[{"path":"array/toObj","sig":"[v] -> { k: v }","examples":[],"description":"Transform an array into an object, where keys are indices, and values are elements.","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/array/index.js#L18"},{"path":"array/toObjBy","sig":"(a -> b) -> [a] -> { b: a }","examples":[],"description":"Given a function that generates a key, turns a list of objects into an object indexing the objects by the given key","deprecated":true,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/array/index.js#L25"},{"path":"array/sample","sig":"[t] -> t","examples":[],"description":"Select a random array item","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/array/index.js#L34"},{"path":"array/shuffle","sig":"[t] -> [t]","examples":["shuffle([1, 2, 3, 4, 5]) // [4, 1, 2, 5, 3]"],"description":"Immutably randomize array element order\nFisher-Yates shuffle","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/array/index.js#L44"},{"path":"async/all","sig":"[promise<t>] -> [t]","examples":[],"description":"parallel resolve promises","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L18"},{"path":"async/race","sig":"[promise<t>] -> t","examples":[],"description":"race","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L25"},{"path":"async/delay","sig":"number -> undefined","examples":[],"description":"delay","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L32"},{"path":"async/toAsync","sig":"(a -> b) -> (a -> promise<b>)","examples":[],"description":"wraps a function to always return a promise","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L39"},{"path":"async/promisify","sig":"?","examples":[],"description":"make an errback-calling function promise-returning\ninverse of callbackify","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L58"},{"path":"async/deferred","sig":"* -> object","examples":[],"description":"creates an externally controlled promise","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L76"},{"path":"async/reduce","sig":"((a, t) -> a) -> a -> [t] -> a","examples":[],"description":"reduce","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L93"},{"path":"async/pipe","sig":"(...f) -> f","examples":[],"description":"serial + async R.pipe. works with sync or async functions","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L103"},{"path":"async/pipeC","sig":"(...f) -> f","examples":[],"description":"curried async pipe","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L112"},{"path":"async/mapLimit","sig":"(a -> b) -> [a] -> [b]","examples":[],"description":"map limit","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L122"},{"path":"async/mapPairsLimit","sig":"number -> ([a, b] -> [c, d]) -> { a: b } -> { c: d }","examples":[],"description":"map pairs limit","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L149"},{"path":"async/forEachLimit","sig":"number -> (a -> b) -> [a] -> [a]","examples":[],"description":"for each limit","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L158"},{"path":"async/everyLimit","sig":"number -> (a -> boolean) -> [a] -> boolean","examples":[],"description":"every limit","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L168"},{"path":"async/someLimit","sig":"number -> (a -> boolean) -> [a] -> boolean","examples":[],"description":"some limit","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L182"},{"path":"async/findLimit","sig":"number -> (a -> boolean) -> [a]","examples":[],"description":"find limit","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L196"},{"path":"async/flatMapLimit","sig":"number -> (a -> [b]) -> [a] -> [b]","examples":["const array = [1, 2, 3];\n\n// [1, 2, 2, 4, 3, 6]\nawait flatMapLimit(2, async n => [n, n * 2], array)"],"description":"flat map limit","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L217"},{"path":"async/filterLimit","sig":"number -> (a -> boolean) -> [a] -> [a]","examples":[],"description":"filter limit","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L224"},{"path":"async/allSettledLimit","sig":"number -> [promise] -> [object]","examples":[],"description":"all settled limit","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L233"},{"path":"async/map","sig":"Functor f => (a -> b) -> f a -> f b","examples":[],"description":"map limit","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L247"},{"path":"async/mapSeries","sig":"Functor f => (a -> b) -> f a -> f b","examples":[],"description":"map series","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L254"},{"path":"async/mapPairs","sig":"([a, b] -> [c, d]) -> { a: b } -> { c: d }","examples":[],"description":"map pairs","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L261"},{"path":"async/mapPairsSeries","sig":"([a, b] -> [c, d]) -> { a: b } -> { c: d }","examples":[],"description":"map pairs series","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L268"},{"path":"async/forEach","sig":"(a -> b) -> [a] -> [a]","examples":[],"description":"parallel for each","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L275"},{"path":"async/forEachSeries","sig":"(a -> b) -> [a] -> [a]","examples":[],"description":"for each series","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L282"},{"path":"async/every","sig":"(a -> boolean) -> [a] -> boolean","examples":[],"description":"parallel every","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L289"},{"path":"async/everySeries","sig":"(a -> boolean) -> [a] -> boolean","examples":[],"description":"every series","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L296"},{"path":"async/some","sig":"(a -> boolean) -> [a] -> boolean","examples":[],"description":"parallel some","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L303"},{"path":"async/someSeries","sig":"(a -> boolean) -> [a] -> boolean","examples":[],"description":"some series","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L310"},{"path":"async/find","sig":"(t -> boolean) -> [t] -> t","examples":[],"description":"parallel find","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L317"},{"path":"async/findSeries","sig":"(t -> boolean) -> [t] -> t","examples":[],"description":"find series","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L324"},{"path":"async/flatMap","sig":"(a -> [b]) -> [a] -> [b]","examples":["const array = [1, 2, 3];\n\n// [1, 2, 2, 4, 3, 6]\nawait flatMap(async n => [n, n * 2], array)"],"description":"parallel flatMap (chain)","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L336"},{"path":"async/flatMapSeries","sig":"(a -> [b]) -> [a] -> [b]","examples":["const array = [1, 2, 3];\n\n// [1, 2, 2, 4, 3, 6]\nawait flatMapSeries(async n => [n, n * 2], array)"],"description":"flatMap series (chain)","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L348"},{"path":"async/filter","sig":"(a -> boolean) -> [a] -> [a]","examples":[],"description":"parallel filter","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L355"},{"path":"async/filterSeries","sig":"(a -> boolean) -> [a] -> [a]","examples":[],"description":"filter series","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L362"},{"path":"async/allSettled","sig":"[promise] -> [object]","examples":[],"description":"parallel all settled","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L369"},{"path":"async/allSettledSeries","sig":"[promise] -> [object]","examples":[],"description":"all settled series","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L376"},{"path":"async/props","sig":"{ a: promise<b> } -> { a: b }","examples":[],"description":"parallel props","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L383"},{"path":"async/timeout","sig":"number -> promise<t> -> promise<t>","examples":[],"description":"timeout a promise","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L390"},{"path":"color/hexToRgb","sig":"string -> { r, g, b }","examples":[],"description":"hex to rgb","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/color/index.js#L77"},{"path":"crypto/md5","sig":"string -> string","examples":[],"description":"md5 hash","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/crypto/index.js#L20"},{"path":"crypto/sha256","sig":"string -> string","examples":[],"description":"sha256 hash","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/crypto/index.js#L26"},{"path":"crypto/sha512","sig":"string -> string","examples":[],"description":"sha512 hash","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/crypto/index.js#L32"},{"path":"function/pipeC","sig":"...f -> f","examples":[],"description":"curried pipe","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/function/index.js#L8"},{"path":"function/on","sig":"(b -> b -> c) -> (a -> b) -> a -> a -> c","examples":["const records = [{ age: 9 }, { age: 1 }, { age: 3 }];\n\n// [{ age: 1 }, { age: 3 }, { age: 9 }]\nR.sort(on(R.subtract, R.prop('age'))), records);"],"description":"on","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/function/index.js#L19"},{"path":"function/once","sig":"(a -> b) -> (a -> b)","examples":[],"description":"once","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/function/index.js#L25"},{"path":"function/noop","sig":"* -> undefined","examples":[],"description":"\"no-op\"","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/function/index.js#L41"},{"path":"is/isDate","sig":"* -> boolean","examples":[],"description":"Test for date type","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/is/index.js#L45"},{"path":"iterable/async/map","sig":"(A -> Promise<B>) -> Iterable<A> -> AsyncIterator<B>","examples":["const iter = from([1, 2, 3])\n\n// from([2, 4, 6])\nmap(async n => n * 2, iter)"],"description":"Applies a function to each of an async iterable's yielded items. Works on all iterables","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/iterable/async.js#L34"},{"path":"iterable/async/flatMap","sig":"(a -> iterable<b>) -> iterable<a> -> asynciterator<b>","examples":["const iter = from([1, 2, 3])\n\n// from([1, 2, 2, 4, 3, 6])\nflatMap(async function* (n) {\n  yield await n;\n  yield await n * 2;\n}, iter)"],"description":"flat map","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/iterable/async.js#L79"},{"path":"number/random","sig":"int -> int -> int","examples":[],"description":"inclusive bounds","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/number/index.js#L7"},{"path":"object/mapPairs","sig":"([k, v] -> [l, m]) -> { k: v } -> { l: m }","examples":[],"description":"map object pairs","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/object/index.js#L32"},{"path":"object/mapKeys","sig":"(k -> m) -> { k: v } -> { m: v }","examples":[],"description":"map object keys","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/object/index.js#L40"},{"path":"object/deepFreeze","sig":"object -> object","examples":[],"description":"recursive + mutating + identity","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/object/index.js#L54"},{"path":"object/toHumanJSON","sig":"json -> string","examples":[],"description":"serialize to json with newlines and indentation","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/object/index.js#L86"},{"path":"stream/toString","sig":"stream -> string","examples":[],"description":"stream to string","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/stream/index.js#L8"},{"path":"stream/fromString","sig":"string -> stream","examples":[],"description":"string to stream","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/stream/index.js#L23"},{"path":"string/capitalize","sig":"string -> string","examples":[],"description":"capitalize the first letter of a string","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/string/index.js#L35"},{"path":"string/template","sig":"string -> object -> string","examples":[],"description":"reasonably similar to js template literals","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/string/index.js#L45"},{"path":"string/slugify","sig":"string -> string","examples":[],"description":"slugify","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/string/index.js#L66"}]}}},"pageContext":{}}