{"data":{"site":{"siteMetadata":{"version":"0.15.0","jsdocs":[{"path":"array/toObj","sig":"[ k: v ] -> { k: v }","examples":["toObj(['a', 'b', 'c']); // { 0: a, 1: b, 2: c }"],"kind":"function","description":"Transform an array into an object, where keys are indices, and values are elements.","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/array/index.js#L18","ignore":false},{"path":"array/toObjBy","sig":"(a -> b) -> [a] -> { b: a }","examples":[],"kind":"function","description":"Given a function that generates a key, turns a list of objects into an object indexing the objects by the given key","deprecated":true,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/array/index.js#L26","ignore":true},{"path":"array/sample","sig":"[a] -> a","examples":["sample([0, 1, 2, 3, 4, 5]); // 2"],"kind":"function","description":"Select a random array item","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/array/index.js#L37","ignore":false},{"path":"array/shuffle","sig":"[a] -> [a]","examples":["shuffle([1, 2, 3, 4, 5]); // [4, 1, 2, 5, 3]"],"kind":"function","description":"Immutably randomize array element order\nFisher-Yates shuffle","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/array/index.js#L47","ignore":false},{"path":"async/all","sig":"[Promise<a>] -> [a]","examples":[],"kind":"function","description":"Resolve promises in parallel","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L18","ignore":false},{"path":"async/race","sig":"[Promise<a>] -> a","examples":[],"kind":"function","description":"Race","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L25","ignore":false},{"path":"async/delay","sig":"Number -> undefined","examples":["await delay(100) // resolved in 100ms"],"kind":"function","description":"Promise returning setTimeout","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L33","ignore":false},{"path":"async/toAsync","sig":"(a -> b) -> (a -> Promise<b>)","examples":[],"kind":"function","description":"wraps a function to always return a promise","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L40","ignore":false},{"path":"async/fromCallback","sig":null,"examples":["await fromCallback(cb => cb(null, 123)); // 123\nawait fromCallback(cb => cb(Error('oops'))); // Error('oops')"],"kind":"function","description":"Returns a promise that is resolved by an err-back function","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L48","ignore":false},{"path":"async/promisify","sig":null,"examples":["const callback = (n, cb) => cb(null, n + 1);\nawait promisify(callback)(1); // 2"],"kind":"function","description":"Make an errback-calling function promise-returning. Inverse of callbackify","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L65","ignore":false},{"path":"async/deferred","sig":"* -> Object","examples":[],"kind":"function","description":"creates an externally controlled promise","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L83","ignore":false},{"path":"async/reduce","sig":"((a, b) -> Promise<a>) -> a -> [b] -> Promise<a>","examples":[],"kind":"function","description":"Async reduce","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L100","ignore":false},{"path":"async/pipe","sig":"(...f) -> f","examples":[],"kind":"function","description":"serial + async R.pipe. works with sync or async functions","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L110","ignore":false},{"path":"async/pipeC","sig":"(...f) -> f","examples":[],"kind":"function","description":"Curried async pipe","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L119","ignore":false},{"path":"async/mapLimit","sig":"Number -> (a -> Promise<b>) -> [a] -> Promise<[b]>","examples":["// [2, 4, 6, 8, 10]\nawait mapLimit(2, async n => n * 2, [1, 2, 3, 4, 5]);"],"kind":"function","description":"Map with variable parallelization","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L129","ignore":false},{"path":"async/mapPairsLimit","sig":"Number -> ([a, b] -> Promise<[c, d]>) -> { a: b } -> Promise<{ c: d }>","examples":[],"kind":"function","description":"Map pairs with variable parallelization","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L156","ignore":false},{"path":"async/forEachLimit","sig":"Number -> (a -> Promise<b>) -> [a] -> Promise<[a]>","examples":[],"kind":"function","description":"For each with variable parallelization","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L165","ignore":false},{"path":"async/everyLimit","sig":"Number -> (a -> Promise<Boolean>) -> [a] -> Promise<Boolean>","examples":[],"kind":"function","description":"Every with variable parallelization","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L175","ignore":false},{"path":"async/someLimit","sig":"Number -> (a -> Promise<Boolean>) -> [a] -> Promise<Boolean>","examples":[],"kind":"function","description":"Some with variable parallelization","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L189","ignore":false},{"path":"async/findLimit","sig":"Number -> (a -> Promise<Boolean>) -> [a] -> Promise<a>","examples":[],"kind":"function","description":"Find with variable parallelization","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L203","ignore":false},{"path":"async/flatMapLimit","sig":"Number -> (a -> Promise<[b]>) -> [a] -> Promise<[b]>","examples":["const array = [1, 2, 3];\n\n// [1, 2, 2, 4, 3, 6]\nawait flatMapLimit(2, async n => [n, n * 2], array);"],"kind":"function","description":"Flat map (aka. \"chain\") with variable parallelization","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L224","ignore":false},{"path":"async/filterLimit","sig":"Number -> (a -> Promise<Boolean>) -> [a] -> Promise<[a]>","examples":[],"kind":"function","description":"Filter with variable parallelization","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L231","ignore":false},{"path":"async/allSettledLimit","sig":"Number -> [Promise] -> Promise<[{ status, value, reason }]>","examples":[],"kind":"function","description":"All settled with variable parallelization","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L240","ignore":false},{"path":"async/map","sig":"(a -> Promise<b>) -> [a] -> Promise<[b]>","examples":[],"kind":"function","description":"Parallel map","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L254","ignore":false},{"path":"async/mapSeries","sig":"(a -> Promise<b>) -> [a] -> Promise<[b]>","examples":[],"kind":"function","description":"Serial map","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L261","ignore":false},{"path":"async/mapPairs","sig":"([a, b] -> Promise<[c, d]>) -> { a: b } -> Promise<{ c: d }>","examples":[],"kind":"function","description":"Parallel map pairs","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L268","ignore":false},{"path":"async/mapPairsSeries","sig":"([a, b] -> Promise<[c, d]>) -> { a: b } -> Promise<{ c: d }>","examples":[],"kind":"function","description":"Serial map pairs","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L275","ignore":false},{"path":"async/forEach","sig":"(a -> Promise<b>) -> [a] -> Promise<[a]>","examples":[],"kind":"function","description":"Parallel for each","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L282","ignore":false},{"path":"async/forEachSeries","sig":"(a -> Promise<b>) -> [a] -> Promise<[a]>","examples":[],"kind":"function","description":"Serial for each","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L289","ignore":false},{"path":"async/every","sig":"(a -> Promise<Boolean>) -> [a] -> Promise<Boolean>","examples":[],"kind":"function","description":"Parallel every","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L296","ignore":false},{"path":"async/everySeries","sig":"(a -> Promise<Boolean>) -> [a] -> Promise<Boolean>","examples":[],"kind":"function","description":"Serial every","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L303","ignore":false},{"path":"async/some","sig":"(a -> Promise<Boolean>) -> [a] -> Promise<Boolean>","examples":[],"kind":"function","description":"Parallel some","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L310","ignore":false},{"path":"async/someSeries","sig":"(a -> Promise<Boolean>) -> [a] -> Promise<Boolean>","examples":[],"kind":"function","description":"Serial some","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L317","ignore":false},{"path":"async/find","sig":"(a -> Promise<Boolean>) -> [a] -> Promise<a>","examples":[],"kind":"function","description":"Parallel find","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L324","ignore":false},{"path":"async/findSeries","sig":"(a -> Promise<Boolean>) -> [a] -> Promise<a>","examples":[],"kind":"function","description":"Serial find","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L331","ignore":false},{"path":"async/flatMap","sig":"(a -> Promise<[b]>) -> [a] -> Promise<[b]>","examples":["const array = [1, 2, 3];\n\n// [1, 2, 2, 4, 3, 6]\nawait flatMap(async n => [n, n * 2], array);"],"kind":"function","description":"Parallel flatMap (aka. \"chain\")","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L343","ignore":false},{"path":"async/flatMapSeries","sig":"(a -> Promise<[b]>) -> [a] -> Promise<[b]>","examples":["const array = [1, 2, 3];\n\n// [1, 2, 2, 4, 3, 6]\nawait flatMapSeries(async n => [n, n * 2], array);"],"kind":"function","description":"Serial flatMap (aka. \"chain\")","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L355","ignore":false},{"path":"async/filter","sig":"(a -> Promise<Boolean>) -> [a] -> Promise<[a]>","examples":["const array = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n// [0, 1, 2, 3, 4, 5]\nawait filter(async n => (n <= 5), array);"],"kind":"function","description":"Parallel filter","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L366","ignore":false},{"path":"async/filterSeries","sig":"(a -> Promise<Boolean>) -> [a] -> Promise<[a]>","examples":["const array = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n// [0, 1, 2, 3, 4, 5]\nawait filterSeries(async n => (n <= 5), array);"],"kind":"function","description":"Serial filter","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L377","ignore":false},{"path":"async/allSettled","sig":"[Promise] -> Promise<[{ status, value, reason }]>","examples":[],"kind":"function","description":"Parallel all settled","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L384","ignore":false},{"path":"async/allSettledSeries","sig":"[Promise] -> Promise<[{ status, value, reason }]>","examples":[],"kind":"function","description":"Serial all settled","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L391","ignore":false},{"path":"async/props","sig":"{ k: Promise<v> } -> Promise<{ k: v }>","examples":["// { one: 1, two: 2 }\nawait props({\n one: Promise.resolve(1),\n two: Promise.resolve(2),\n})"],"kind":"function","description":"Parallel props","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L404","ignore":false},{"path":"async/evolve","sig":"{ k: (a -> Promise<b>) } -> { k: a } -> Promise<{ k: b }>","examples":[],"kind":"function","description":"Async R.evolve","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L411","ignore":false},{"path":"async/timeout","sig":"Number -> Promise<a> -> Promise<a>","examples":[],"kind":"function","description":"Timeout a promise","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/async/index.js#L418","ignore":false},{"path":"color/rgbToHsl","sig":"{ r, g, b } -> { h, s, l }","examples":[],"kind":"function","description":"rgb to hsl","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/color/index.js#L13","ignore":false},{"path":"color/hslToRgb","sig":"{ h, s, l } -> { r, g, b }","examples":[],"kind":"function","description":"hsl to rgb","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/color/index.js#L48","ignore":false},{"path":"color/hexToRgb","sig":"String -> { r, g, b }","examples":[],"kind":"function","description":"hex to rgb","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/color/index.js#L83","ignore":false},{"path":"color/rgbToHex","sig":"{ r, g, b } -> String","examples":[],"kind":"function","description":"rgb to hex","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/color/index.js#L103","ignore":false},{"path":"color/hslToHex","sig":"{ h, s, l } -> String","examples":[],"kind":"function","description":"hsl to hex","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/color/index.js#L115","ignore":false},{"path":"color/hexToHsl","sig":"String -> { h, s, l }","examples":[],"kind":"function","description":"hex to hsl","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/color/index.js#L121","ignore":false},{"path":"color/randomRgb","sig":"* -> { r, g, b }","examples":[],"kind":"function","description":"random rgb","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/color/index.js#L127","ignore":false},{"path":"color/randomHex","sig":"* -> String","examples":[],"kind":"function","description":"random hex","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/color/index.js#L137","ignore":false},{"path":"color/randomHsl","sig":"* -> { h, s, l }","examples":[],"kind":"function","description":"random hsl","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/color/index.js#L143","ignore":false},{"path":"crypto/md5","sig":"String -> String","examples":[],"kind":"function","description":"md5 hash","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/crypto/index.js#L20","ignore":false},{"path":"crypto/sha256","sig":"String -> String","examples":[],"kind":"function","description":"sha256 hash","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/crypto/index.js#L26","ignore":false},{"path":"crypto/sha512","sig":"String -> String","examples":[],"kind":"function","description":"sha512 hash","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/crypto/index.js#L32","ignore":false},{"path":"datetime/now","sig":"a -> Date","examples":[],"kind":"function","description":"Get the current unix epoch (in ms)","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/datetime/index.js#L5","ignore":false},{"path":"function/pipeC","sig":"...f -> f","examples":[],"kind":"function","description":"Curried pipe","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/function/index.js#L8","ignore":false},{"path":"function/on","sig":"(b -> b -> c) -> (a -> b) -> a -> a -> c","examples":["const records = [{ age: 9 }, { age: 1 }, { age: 3 }];\n\n// [{ age: 1 }, { age: 3 }, { age: 9 }]\nR.sort(on(R.subtract, R.prop('age'))), records);"],"kind":"function","description":"on","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/function/index.js#L19","ignore":false},{"path":"function/once","sig":"(a -> b) -> (a -> b)","examples":[],"kind":"function","description":"once","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/function/index.js#L25","ignore":false},{"path":"function/noop","sig":"a -> undefined","examples":[],"kind":"function","description":"\"no-op\"","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/function/index.js#L41","ignore":false},{"path":"http/parseContentType","sig":"String -> { mimeType, charset, boundary }","examples":[],"kind":"constant","description":"Parse a content-type HTTP header into its parts","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/http/index.js#L12","ignore":false},{"path":"array","sig":null,"examples":[],"kind":"module","description":"Array functions","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/index.js#L1","ignore":false},{"path":"async","sig":null,"examples":[],"kind":"module","description":"Async functions","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/index.js#L6","ignore":false},{"path":"color","sig":null,"examples":[],"kind":"module","description":"Color functions","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/index.js#L11","ignore":false},{"path":"crypto","sig":null,"examples":[],"kind":"module","description":"Crypto functions","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/index.js#L16","ignore":false},{"path":"datetime","sig":null,"examples":[],"kind":"module","description":"Datetime functions","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/index.js#L21","ignore":false},{"path":"function","sig":null,"examples":[],"kind":"module","description":"Function functions","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/index.js#L26","ignore":false},{"path":"http","sig":null,"examples":[],"kind":"module","description":"HTTP functions","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/index.js#L31","ignore":false},{"path":"is","sig":null,"examples":[],"kind":"module","description":"Is functions","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/index.js#L36","ignore":false},{"path":"iterable","sig":null,"examples":[],"kind":"module","description":"Iterable functions","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/index.js#L41","ignore":false},{"path":"number","sig":null,"examples":[],"kind":"module","description":"Number functions","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/index.js#L46","ignore":false},{"path":"object","sig":null,"examples":[],"kind":"module","description":"Object functions","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/index.js#L51","ignore":false},{"path":"process","sig":null,"examples":[],"kind":"module","description":"Process functions","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/index.js#L56","ignore":false},{"path":"stream","sig":null,"examples":[],"kind":"module","description":"Stream functions","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/index.js#L61","ignore":false},{"path":"string","sig":null,"examples":[],"kind":"module","description":"String functions","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/index.js#L66","ignore":false},{"path":"url","sig":null,"examples":[],"kind":"module","description":"Url functions","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/index.js#L71","ignore":false},{"path":"uuid","sig":null,"examples":[],"kind":"module","description":"UUID functions","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/index.js#L76","ignore":false},{"path":"is/isFinite","sig":"a -> Boolean","examples":["isFinite(10); // true\nisFinite(Infinity); // false"],"kind":"function","description":"Is finite?","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/is/index.js#L18","ignore":false},{"path":"is/isInteger","sig":"a -> Boolean","examples":["isInteger(1); // true\nisInteger(1.23); // false"],"kind":"function","description":"Is integer?","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/is/index.js#L27","ignore":false},{"path":"is/isNaN","sig":"a -> Boolean","examples":["isNaN(NaN); // true"],"kind":"function","description":"Is NaN?","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/is/index.js#L34","ignore":false},{"path":"is/isArray","sig":"a -> Boolean","examples":["isArray([]); // true"],"kind":"function","description":"Is Array?","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/is/index.js#L43","ignore":false},{"path":"is/isBuffer","sig":"a -> Boolean","examples":[],"kind":"function","description":"Is Buffer?","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/is/index.js#L51","ignore":false},{"path":"is/is","sig":"a -> b -> Boolean","examples":[],"kind":"function","description":"Is equal (strict reference equality)","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/is/index.js#L58","ignore":false},{"path":"is/isNot","sig":"a -> b -> Boolean","examples":[],"kind":"function","description":"Is not equal (strict reference equality)","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/is/index.js#L64","ignore":false},{"path":"is/isInstanceOf","sig":"String -> a -> Boolean","examples":["isInstanceOf(Array, []); // true"],"kind":"function","description":"Is instance of class?","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/is/index.js#L71","ignore":false},{"path":"is/isTypeOf","sig":"String -> a -> Boolean","examples":["isTypeOf('boolean', true); // true"],"kind":"function","description":"Is type of?","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/is/index.js#L78","ignore":false},{"path":"is/isBoolean","sig":"a -> Boolean","examples":[],"kind":"function","description":"Is Boolean?","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/is/index.js#L84","ignore":false},{"path":"is/isDate","sig":"a -> Boolean","examples":["isDate(new Date()); // true"],"kind":"function","description":"Is Date?","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/is/index.js#L91","ignore":false},{"path":"is/isRegExp","sig":"a -> Boolean","examples":["isRegExp(/[a-z]/); // true"],"kind":"function","description":"Is regular expression?","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/is/index.js#L98","ignore":false},{"path":"is/isFunction","sig":"a -> Boolean","examples":["isFunction(() => {}); // true"],"kind":"function","description":"Is function?","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/is/index.js#L105","ignore":false},{"path":"is/isNull","sig":"a -> Boolean","examples":[],"kind":"function","description":"Is null?","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/is/index.js#L111","ignore":false},{"path":"is/isString","sig":"a -> Boolean","examples":[],"kind":"function","description":"Is string?","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/is/index.js#L117","ignore":false},{"path":"is/isSymbol","sig":"a -> Boolean","examples":[],"kind":"function","description":"Is symbol?","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/is/index.js#L123","ignore":false},{"path":"is/isUndefined","sig":"a -> Boolean","examples":[],"kind":"function","description":"Is undefined?","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/is/index.js#L129","ignore":false},{"path":"is/isNumber","sig":"a -> Boolean","examples":[],"kind":"function","description":"Is number?","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/is/index.js#L135","ignore":false},{"path":"is/isNegative","sig":"a -> Boolean","examples":[],"kind":"function","description":"Is negative?","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/is/index.js#L141","ignore":false},{"path":"is/isPositive","sig":"a -> Boolean","examples":[],"kind":"function","description":"Is positive?","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/is/index.js#L147","ignore":false},{"path":"is/isFloat","sig":"a -> Boolean","examples":["isFloat(1.23); // true\nisFloat(1); // false"],"kind":"function","description":"Is float?","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/is/index.js#L156","ignore":false},{"path":"is/isTruthy","sig":"a -> Boolean","examples":[],"kind":"function","description":"Is truthy?","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/is/index.js#L162","ignore":false},{"path":"is/isFalsey","sig":"a -> Boolean","examples":[],"kind":"function","description":"Is false?","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/is/index.js#L168","ignore":false},{"path":"is/isObject","sig":"a -> Boolean","examples":["isObject({}); // true\nisObject([]]); // false\nisObject(null); // false"],"kind":"function","description":"Is object?","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/is/index.js#L178","ignore":false},{"path":"is/isPromise","sig":"a -> Boolean","examples":["isPromise(Promise.resolve(1)); // true"],"kind":"function","description":"Is promise?","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/is/index.js#L189","ignore":false},{"path":"is/isStream","sig":"a -> Boolean","examples":[],"kind":"function","description":"Is stream?","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/is/index.js#L199","ignore":false},{"path":"is/isPojo","sig":"a -> Boolean","examples":[],"kind":"function","description":"Is \"plain old javascript object\"?","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/is/index.js#L208","ignore":false},{"path":"is/isIterator","sig":"a -> Boolean","examples":["const iterator = [][Symbol.iterator]();\nisIterator(iterator); // true"],"kind":"function","description":"Is iterator?","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/is/index.js#L220","ignore":false},{"path":"is/isIterable","sig":"a -> Boolean","examples":[],"kind":"function","description":"Is iterable?","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/is/index.js#L229","ignore":false},{"path":"is/isAsyncIterable","sig":"a -> Boolean","examples":[],"kind":"function","description":"Is async iterable?","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/is/index.js#L238","ignore":false},{"path":"iterable/async/map","sig":"(a -> Promise<b>) -> Iterable<a> -> AsyncIterator<b>","examples":["const iterator = from([1, 2, 3])\n\n// from([2, 4, 6])\nmap(async n => n * 2, iterator)"],"kind":"function","description":"Applies a function to each of an async iterable's yielded items. Works on all iterables","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/iterable/async.js#L34","ignore":false},{"path":"iterable/async/from","sig":"Iterable<a> -> AsyncIterator<a>","examples":["from([1, 2, 3]) // AsyncIterator<1, 2, 3>"],"kind":"function","description":"Returns an async iterator from an iterable","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/iterable/async.js#L44","ignore":false},{"path":"iterable/async/flatMap","sig":"(a -> Iterable<b>) -> Iterable<a> -> AsyncIterator<b>","examples":["const iterator = from([1, 2, 3])\n\n// from([1, 2, 2, 4, 3, 6])\nflatMap(async function* (n) {\n  yield await n;\n  yield await n * 2;\n}, iterator);"],"kind":"function","description":"Maps a function over an iterable and concatenates the results. a.k.a. \"chain\"","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/iterable/async.js#L84","ignore":false},{"path":"iterable/async/of","sig":"...a -> AsyncIterator<a>","examples":["of(1, 2, 3); // AsyncIterator<1, 2, 3>"],"kind":"function","description":"Create an iterator of one or more (variadic) arguments","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/iterable/async.js#L95","ignore":false},{"path":"iterable/async/reduce","sig":"((a, b) -> Promise<a>) -> a -> Iterable<b> -> Promise<a>","examples":["const iterator = from([1, 2, 3]);\nawait reduce((a, b) => a + b, 0, iterator); // 6"],"kind":"function","description":"reduce","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/iterable/async.js#L111","ignore":false},{"path":"iterable/async/zipWith","sig":"((a, b) -> Promise<c>) -> Iterable<a> -> Iterable<b> -> AsyncIterator<c>","examples":[],"kind":"function","description":"zip with","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/iterable/async.js#L142","ignore":false},{"path":"iterable/async/zip","sig":"Iterable<a> -> Iterable<b> -> AsyncIterator<[a, b]>","examples":["zip(from([1, 2, 3]), from([4, 5, 6])); // from([[1, 4], [2, 5], [3, 6]])"],"kind":"function","description":"\"zips\" two iterables into pairs of items from corresponding indices\nof the input iterables. truncated to shorter of two iterables","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/iterable/async.js#L152","ignore":false},{"path":"iterable/async/rangeStep","sig":"Number -> Number -> Number -> AsyncIterator<Number>","examples":[],"kind":"function","description":"iterates from 0 to n by with a step (exclusive)","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/iterable/async.js#L159","ignore":false},{"path":"iterable/async/range","sig":"Number -> Number -> AsyncIterator<Number>","examples":["range(0, 5) // from([0, 1, 2, 3, 4])"],"kind":"function","description":"iterates from 0 to n - 1 (exclusive)","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/iterable/async.js#L171","ignore":false},{"path":"iterable/async/enumerate","sig":"Iterable<a> -> AsyncIterator<[Integer, a]>","examples":["const iterator = from(['zero', 'one', 'two'])\nenumerate(iterator) // from([[0, 'zero'], [1, 'one'], [2, 'two']])"],"kind":"function","description":"transform an iterable to an iterable of pairs of indices and their items","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/iterable/async.js#L180","ignore":false},{"path":"iterable/async/slice","sig":"Integer -> Integer -> Iterable<a> -> AsyncIterator<a>","examples":[],"kind":"function","description":"slice","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/iterable/async.js#L196","ignore":false},{"path":"iterable/async/concat","sig":"Iterable<a> -> Iterable<a> -> AsyncIterator<a>","examples":[],"kind":"function","description":"yield all items from one iterator, then the other","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/iterable/async.js#L207","ignore":false},{"path":"iterable/async/prepend","sig":"a -> Iterable<a> -> AsyncIterator<a>","examples":[],"kind":"function","description":"Prepend an item `a` to the end of an iterable","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/iterable/async.js#L216","ignore":false},{"path":"iterable/async/append","sig":"a -> Iterable<a> -> AsyncIterator<a>","examples":[],"kind":"function","description":"Append an item `a` to the start of an iterable","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/iterable/async.js#L222","ignore":false},{"path":"iterable/async/forEach","sig":"(a -> Promise<b>) -> Iterable<a> -> AsyncIterator<a>","examples":[],"kind":"function","description":"run a function (side-effect) once for each item","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/iterable/async.js#L228","ignore":false},{"path":"iterable/async/filter","sig":"(a -> Promise<Boolean>) -> Iterable<a> -> AsyncIterator<a>","examples":[],"kind":"function","description":"yield only items that pass the predicate","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/iterable/async.js#L237","ignore":false},{"path":"iterable/async/reject","sig":"(a -> Promise<Boolean>) -> Iterable<a> -> AsyncIterator<a>","examples":[],"kind":"function","description":"Yield only items that do not pass the predicate","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/iterable/async.js#L245","ignore":false},{"path":"iterable/async/unnest","sig":"Iterable<Iterable<a>> -> AsyncIterator<a>","examples":[],"kind":"function","description":"Flattens one level of a nested iterable of iterables","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/iterable/async.js#L262","ignore":false},{"path":"iterable/async/flatIterate","sig":"(a -> Iterable<a>) -> a -> AsyncIterator<a>","examples":[],"kind":"function","description":"Flat iterate","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/iterable/async.js#L286","ignore":false},{"path":"iterable/async/iterate","sig":"(a -> Promise<a>) -> a -> AsyncIterator<a>","examples":[],"kind":"function","description":"Iterate infinitely, yielding items from seed through a predicate","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/iterable/async.js#L294","ignore":false},{"path":"iterable/async/some","sig":"(a -> Promise<Boolean>) -> Iterable<a> -> Promise<Boolean>","examples":[],"kind":"function","description":"Does any item pass the predicate?","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/iterable/async.js#L303","ignore":false},{"path":"iterable/async/none","sig":"(a -> Promise<Boolean>) -> Iterable<a> -> Promise<Boolean>","examples":[],"kind":"function","description":"Do all items fail the predicate?","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/iterable/async.js#L312","ignore":false},{"path":"iterable/async/take","sig":"Integer -> Iterable<a> -> AsyncIterator<a>","examples":[],"kind":"function","description":"Yield only the first n items of an iterable","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/iterable/async.js#L342","ignore":false},{"path":"iterable/async/drop","sig":"Integer -> Iterable<a> -> AsyncIterator<a>","examples":[],"kind":"function","description":"Drop the first n items of an iterable","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/iterable/async.js#L351","ignore":false},{"path":"iterable/async/tail","sig":"Iterable<a> -> AsyncIterator<a>","examples":[],"kind":"function","description":"Yield all but the first item","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/iterable/async.js#L357","ignore":false},{"path":"iterable/async/repeat","sig":"a -> Iterator<a>","examples":[],"kind":"function","description":"Infinitely yield an item (a)","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/iterable/async.js#L363","ignore":false},{"path":"iterable/async/times","sig":"Integer -> a -> AsyncIterator<a>","examples":[],"kind":"function","description":"Yield an item (a) n times. aka replicate","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/iterable/async.js#L369","ignore":false},{"path":"iterable/async/length","sig":"Iterable<a> -> Promise<Integer>","examples":[],"kind":"function","description":"Get length of iterable","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/iterable/async.js#L375","ignore":false},{"path":"iterable/async/sumBy","sig":"(a -> Promise<Number>) -> Iterable<a> -> Promise<Number>","examples":[],"kind":"function","description":"Sum by","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/iterable/async.js#L385","ignore":false},{"path":"iterable/async/sum","sig":"Iterable<Number> -> Promise<Number>","examples":[],"kind":"function","description":"Sum","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/iterable/async.js#L397","ignore":false},{"path":"iterable/async/max","sig":"Iterable<Number> -> Promise<Number>","examples":[],"kind":"function","description":"Max","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/iterable/async.js#L406","ignore":false},{"path":"iterable/async/toArray","sig":"Iterable<a> -> Promise<[a]>","examples":[],"kind":"function","description":"Transforms an iterable to an array. exhasts input","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/iterable/async.js#L412","ignore":false},{"path":"iterable/async/every","sig":"(a -> Promise<Boolean>) -> Iterable<a> -> Promise<Boolean>","examples":[],"kind":"function","description":"do all items pass their predicate?","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/iterable/async.js#L427","ignore":false},{"path":"iterable/async/find","sig":"(a -> Promise<Boolean>) -> Iterable<a> -> Promise<a|undefined>","examples":[],"kind":"function","description":"find","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/iterable/async.js#L437","ignore":false},{"path":"iterable/async/findIndex","sig":"(a -> Promise<Boolean>) -> Iterable<a> -> Promise<Integer>","examples":[],"kind":"function","description":"find index","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/iterable/async.js#L446","ignore":false},{"path":"iterable/async/exhaust","sig":"Iterable<a> -> Promise<undefined>","examples":[],"kind":"function","description":"Yield all items","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/iterable/async.js#L458","ignore":false},{"path":"iterable/async/takeWhile","sig":"(a -> Promise<Boolean>) -> Iterable<a> -> AsyncIterator<a>","examples":[],"kind":"function","description":"Take while","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/iterable/async.js#L466","ignore":false},{"path":"iterable/async/dropWhile","sig":"(a -> Promise<Boolean>) -> Iterable<a> -> AsyncIterator<a>","examples":[],"kind":"function","description":"Drop while","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/iterable/async.js#L477","ignore":false},{"path":"iterable/async/group","sig":"Iterable<a> -> AsyncIterator<[a]>","examples":[],"kind":"function","description":"Group","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/iterable/async.js#L550","ignore":false},{"path":"iterable/async/splitAt","sig":"Integer -> Iterable<a> -> [AsyncIterator<a>, AsyncIterator<a>]","examples":[],"kind":"function","description":"Split an iterable into a pair of iterables at a particular index","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/iterable/async.js#L590","ignore":false},{"path":"iterable/async/cycleN","sig":"Integer -> Iterable<a> -> AsyncIterator<a>","examples":[],"kind":"function","description":"Yield all items from an iterator, n times","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/iterable/async.js#L606","ignore":false},{"path":"iterable/async/cycle","sig":"Iterable<a> -> AsyncIterator<a>","examples":["const iterator = from([1, 2, 3]);\ncycle(iterator) // AsyncIterator<1, 2, 3, 1, 2, 3, ...>"],"kind":"function","description":"yield iterable items cyclically, infinitely looping when exhausted","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/iterable/async.js#L620","ignore":false},{"path":"iterable/async/joinWith","sig":"String -> Iterable<a> -> Promise<String>","examples":[],"kind":"function","description":"Serialize iterator items to a string with an arbitrary spacer","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/iterable/async.js#L643","ignore":false},{"path":"iterable/async/join","sig":"Iterable<a> -> Promise<String>","examples":[],"kind":"function","description":"Serialize iterator items to a string","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/iterable/async.js#L652","ignore":false},{"path":"iterable/async/isEmpty","sig":"Iterable<a> -> Promise<Boolean>","examples":[],"kind":"function","description":"Is an iterable empty? (done or length = 0)","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/iterable/async.js#L658","ignore":false},{"path":"iterable/async/indices","sig":"Iterable<a> -> AsyncIterator<Integer>","examples":[],"kind":"function","description":"Get an iterator of indices (0 to length - 1)","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/iterable/async.js#L680","ignore":false},{"path":"iterable/async","sig":null,"examples":[],"kind":"module","description":"Async iterable functions","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/iterable/index.js#L1","ignore":false},{"path":"iterable/sync","sig":null,"examples":[],"kind":"module","description":"Sync iterable functions","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/iterable/index.js#L6","ignore":false},{"path":"iterable/sync/from","sig":"Iterable<a> -> Iterator<a>","examples":["from([1, 2, 3]) // Iterator<1, 2, 3>"],"kind":"function","description":"Returns an iterator from an iterable","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/iterable/sync.js#L28","ignore":false},{"path":"number/random","sig":"Integer -> Integer -> Integer","examples":[],"kind":"function","description":"inclusive bounds","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/number/index.js#L7","ignore":false},{"path":"object/firstPair","sig":"{ k: v } -> [k, v]","examples":[],"kind":"function","description":"Get an object's first key: value pair","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/object/index.js#L15","ignore":false},{"path":"object/firstKey","sig":"{ k: v } -> k","examples":[],"kind":"function","description":"Get an object's first key","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/object/index.js#L21","ignore":false},{"path":"object/firstValue","sig":"{ k: v } -> v","examples":[],"kind":"function","description":"Get an object's first value","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/object/index.js#L27","ignore":false},{"path":"object/mapPairs","sig":"([a, b] -> [c, d]) -> { a: b } -> { c: d }","examples":[],"kind":"function","description":"Map object key / value pairs","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/object/index.js#L43","ignore":false},{"path":"object/mapKeys","sig":"(k -> k) -> { k: v } -> { k: v }","examples":["mapKeys(R.reverse, { one: 1, two: 2 }); // { eno: 1, owt: 2 }"],"kind":"function","description":"Map object keys","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/object/index.js#L53","ignore":false},{"path":"object/deepFreeze","sig":"{*} -> {*}","examples":[],"kind":"function","description":"recursive + mutating + identity","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/object/index.js#L67","ignore":false},{"path":"object/toHumanJSON","sig":"JSON -> String","examples":[],"kind":"function","description":"Serialize to JSON with newlines and indentation","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/object/index.js#L99","ignore":false},{"path":"stream/toString","sig":"Stream -> String","examples":[],"kind":"function","description":"Stream to string","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/stream/index.js#L8","ignore":false},{"path":"stream/fromString","sig":"String -> Stream","examples":[],"kind":"function","description":"String to stream","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/stream/index.js#L23","ignore":false},{"path":"string/capitalize","sig":"String -> String","examples":["capitalize('hello'); // 'Hello'"],"kind":"function","description":"Capitalize the first letter of a string","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/string/index.js#L36","ignore":false},{"path":"string/template","sig":"String -> {*} -> String","examples":[],"kind":"function","description":"Reasonably similar to JavaScript template literals","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/string/index.js#L46","ignore":false},{"path":"string/toBase64","sig":"String -> String","examples":[],"kind":"function","description":"Encode a string to base64","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/string/index.js#L65","ignore":false},{"path":"string/parseBase64","sig":"String -> String","examples":[],"kind":"function","description":"Decode a string from base64","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/string/index.js#L71","ignore":false},{"path":"string/slugify","sig":"String -> String","examples":[],"kind":"function","description":"Slugify","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/string/index.js#L77","ignore":false},{"path":"uuid/uuid","sig":"a -> String","examples":["uuid(); // 'uuid318651f1-8736-48ea-8937-a1732e544983'"],"kind":"function","description":"Random UUID v4","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/uuid/index.js#L10","ignore":false},{"path":"uuid/isUuid","sig":"a -> Boolean","examples":["isUuid('uuid318651f1-8736-48ea-8937-a1732e544983'); // true"],"kind":"function","description":"Is UUID v4?","deprecated":null,"url":"https://github.com/colbydauph/funk-lib/blob/feat-docs/src/uuid/index.js#L23","ignore":false}]}}},"pageContext":{}}